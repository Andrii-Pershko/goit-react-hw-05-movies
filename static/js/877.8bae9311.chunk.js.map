{"version":3,"file":"static/js/877.8bae9311.chunk.js","mappings":"+RAAO,IAAMA,EAAO,sCACPC,EAAU,mCACVC,EAAU,sCACVC,EAAiB,2BAAuBF,EAAvB,mBACjBG,EAAkB,mBAAeH,EAAf,mBAClBI,EAAiB,4DAAwDJ,EAAxD,qDACjBK,EAAoB,2BAAuBL,EAAvB,yB,6HCyCjC,EA1CoB,WAClB,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAhBAE,EAAAA,EAAAA,YAAU,WAER,IACEC,EAAAA,EAAAA,IAAA,UAAaf,EAAAA,IAAb,OAAuBY,GAAvB,OAAiCT,EAAAA,KAAqBa,MAAK,SAAAC,GACzDR,EAAUQ,EAAIC,KAAKC,MACnBR,EAAU,UACX,GAIF,CAHC,SACAS,MAAM,oCACNT,EAAU,QACX,CAGF,GAAE,IAGY,UAAXD,GACK,6DAGM,YAAXA,GAEA,wBAEGF,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,KAAhC,OACV,2BACE,gBAAKC,MAAO,IAAKC,IAAG,UAAKzB,EAAAA,IAAL,OAAkBqB,GAAgBK,IAAI,MAC1D,uCAAeJ,MACf,kCAAUC,OAHHH,EADC,WAJlB,CAcD,C","sources":["URLs/urls.js","components/Cast/Cast.jsx"],"sourcesContent":["export const baseUrl = `https://api.themoviedb.org/3/movie/`;\nexport const API_KEY = '85c51028d47d6f3b76fd606d9b7a0314';\nexport const baseImgURL = `https://image.tmdb.org/t/p/original`;\nexport const optionURLFromCast = `/credits?api_key=${API_KEY}&language=en-US`;\nexport const optionMovieDetails = `?api_key=${API_KEY}&language=en-US`;\nexport const URLFromMovieItems = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=`;\nexport const optionURLfromReviews = `/reviews?api_key=${API_KEY}&language=en-US&page=1`;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { baseUrl, optionURLFromCast, baseImgURL } from '../../URLs/urls';\n\nexport const Cast = () => {\n  const [actors, setActors] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n\n  useEffect(() => {\n    //лише при першому рендеру робимо запит на сервер\n    try {\n      axios.get(`${baseUrl}${movieId}${optionURLFromCast}`).then(res => {\n        setActors(res.data.cast);\n        setStatus('pending');\n      });\n    } catch {\n      alert('Unknown error, please reset page');\n      setStatus('error');\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //якщо зловили помилку рендерим:\n  if (status === 'error') {\n    return <h1>Unknown error, please reset page</h1>;\n  }\n  // якщо все добре рендерим:\n  if (status === 'pending') {\n    return (\n      <ul>\n        {/* робимо map по масиву та рендерим: */}\n        {actors.map(({ id, profile_path, character, name }) => (\n          <li key={id}>\n            <img width={120} src={`${baseImgURL}${profile_path}`} alt=\"\" />\n            <p>Character: {character}</p>\n            <p>Name: {name}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default Cast;\n"],"names":["baseUrl","API_KEY","baseImgURL","optionURLFromCast","optionMovieDetails","URLFromMovieItems","optionURLfromReviews","useState","actors","setActors","status","setStatus","movieId","useParams","useEffect","axios","then","res","data","cast","alert","map","id","profile_path","character","name","width","src","alt"],"sourceRoot":""}