{"version":3,"file":"static/js/61.0b5795b8.chunk.js","mappings":"mgBAAO,IAAMA,EAAO,sCACPC,EAAU,mCACVC,EAAU,sCACVC,EAAiB,2BAAuBF,EAAvB,mBACjBG,EAAkB,mBAAeH,EAAf,mBAClBI,EAAiB,4DAAwDJ,EAAxD,qDACjBK,EAAoB,2BAAuBL,EAAvB,0BACpBM,EAAqB,kEAA8DN,E,oICFjF,SAASO,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WACR,IACEC,EAAAA,EAAAA,IAAA,UACUR,EAAAA,KACPS,MAAK,SAAAC,GAAU,OAAIN,EAAaM,EAAWC,KAAKC,QAAjC,GAGnB,CAFC,SACAC,MAAM,gBACP,CACF,GAAE,KAGD,iCACE,4CACA,eAAIC,UAAU,YAAd,SACGX,EAAUY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACb,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMf,GAA1C,SACGY,KAFID,EADI,QAUtB,C","sources":["URLs/urls.js","pages/Trendings/Trendings.jsx"],"sourcesContent":["export const baseUrl = `https://api.themoviedb.org/3/movie/`;\nexport const API_KEY = '85c51028d47d6f3b76fd606d9b7a0314';\nexport const baseImgURL = `https://image.tmdb.org/t/p/original`;\nexport const optionURLFromCast = `/credits?api_key=${API_KEY}&language=en-US`;\nexport const optionMovieDetails = `?api_key=${API_KEY}&language=en-US`;\nexport const URLFromMovieItems = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=`;\nexport const optionURLfromReviews = `/reviews?api_key=${API_KEY}&language=en-US&page=1`;\nexport const optionalFromTrendings = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { optionalFromTrendings } from 'URLs';\nimport axios from 'axios';\n\nexport default function Trendings() {\n  const [movieList, setMovieList] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    try {\n      axios\n        .get(`${optionalFromTrendings}`)\n        .then(dataMovies => setMovieList(dataMovies.data.results));\n    } catch {\n      alert('Unknown error');\n    }\n  }, []);\n\n  return (\n    <>\n      <h1>Tranding today</h1>\n      <ul className=\"movieList\">\n        {movieList.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n"],"names":["baseUrl","API_KEY","baseImgURL","optionURLFromCast","optionMovieDetails","URLFromMovieItems","optionURLfromReviews","optionalFromTrendings","Trendings","useState","movieList","setMovieList","location","useLocation","useEffect","axios","then","dataMovies","data","results","alert","className","map","id","title","to","state","from"],"sourceRoot":""}