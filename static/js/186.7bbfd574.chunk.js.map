{"version":3,"file":"static/js/186.7bbfd574.chunk.js","mappings":"idAAO,IAAMA,EAAO,sCACPC,EAAU,mCACVC,EAAU,sCACVC,EAAiB,2BAAuBF,EAAvB,mBACjBG,EAAkB,mBAAeH,EAAf,mBAClBI,EAAiB,4DAAwDJ,EAAxD,qDACjBK,EAAoB,2BAAuBL,EAAvB,yB,6HCDlB,SAASM,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IACEC,EAAAA,EAAAA,IAAA,UAAahB,EAAAA,IAAb,OAAuBa,GAAvB,OAAiCP,EAAAA,KAAwBW,MAAK,SAAAC,GAC5DR,EAAWQ,EAAIC,KAAKC,SACpBR,EAAU,UACX,GAIF,CAHC,SACAS,MAAM,oCACNT,EAAU,QACX,CAGF,GAAE,IAEY,UAAXD,GACK,6DAGM,YAAXA,EAEqB,IAAnBF,EAAQa,QACH,2CAKL,wBACGb,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBACE,oCAAYD,QAEd,uBAAIC,MAJGF,EADE,WATrB,CAqBD,C","sources":["URLs/urls.js","components/Reviews/Reviews.jsx"],"sourcesContent":["export const baseUrl = `https://api.themoviedb.org/3/movie/`;\nexport const API_KEY = '85c51028d47d6f3b76fd606d9b7a0314';\nexport const baseImgURL = `https://image.tmdb.org/t/p/original`;\nexport const optionURLFromCast = `/credits?api_key=${API_KEY}&language=en-US`;\nexport const optionMovieDetails = `?api_key=${API_KEY}&language=en-US`;\nexport const URLFromMovieItems = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=`;\nexport const optionURLfromReviews = `/reviews?api_key=${API_KEY}&language=en-US&page=1`;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { baseUrl, optionURLfromReviews } from 'URLs';\nimport axios from 'axios';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      axios.get(`${baseUrl}${movieId}${optionURLfromReviews}`).then(res => {\n        setReviews(res.data.results);\n        setStatus('pending');\n      });\n    } catch {\n      alert('Unknown error, please reset page');\n      setStatus('error');\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  //якщо зловили помилку рендерим:\n  if (status === 'error') {\n    return <h1>Unknown error, please reset page</h1>;\n  }\n  //якщо все добре рендерим:\n  if (status === 'pending') {\n    //якщо відсутні рецензії повідовляємо про це\n    if (reviews.length === 0) {\n      return <h2> Not reviews </h2>;\n    }\n    //в іншому випадку рендеримо рецензії\n    else {\n      return (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>\n                <b>Authot: {author}</b>\n              </p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  }\n}\n\n//\n"],"names":["baseUrl","API_KEY","baseImgURL","optionURLFromCast","optionMovieDetails","URLFromMovieItems","optionURLfromReviews","Reviews","useState","reviews","setReviews","status","setStatus","movieId","useParams","useEffect","axios","then","res","data","results","alert","length","map","id","author","content"],"sourceRoot":""}