{"version":3,"file":"static/js/961.28604dc8.chunk.js","mappings":"4OAQe,SAASA,IAAgB,IAAD,IACrC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BH,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC7CC,QAAQC,IAAI,eAAgBL,GAC5B,IAAMM,GAAUC,EAAAA,EAAAA,QAAOP,GAUvB,OATAI,QAAQC,IAAI,UAAWC,IAEvBE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,UAdY,uCAcZ,OAAuBb,GAAvB,OAfS,6DAemCc,MAAK,SAAAC,GAC/ChB,EAAWgB,GACXZ,EAAU,UACX,GACF,GAAE,CAACH,KAGF,iCACE,SAAC,KAAD,CAAMgB,GAAIN,EAAQO,QAAlB,UACE,oDAGF,gBAAKC,MAAO,CAAEC,QAAS,QAAvB,SACc,SAAXjB,EAAoB,MACnB,iCACE,gBACEkB,MAAO,IACPC,IAAG,UA9BF,wCA8BE,OAAcvB,EAAQwB,KAAKC,aAC9BC,IAAI,YAGN,4BACE,wBAAK1B,EAAQwB,KAAKG,SAClB,yCAA6C,GAA5B3B,EAAQwB,KAAKI,cAAmBC,UAAjD,QACA,wBACE,uCAEF,uBAAI7B,EAAQwB,KAAKM,YACjB,wBACE,qCAEF,uBAAI9B,EAAQwB,KAAKO,OAAOC,KAAI,SAAAC,GAAG,MAAI,IAAMA,EAAIC,KAAO,IAArB,eAKvC,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMhB,GAAG,OAAOiB,QAASjC,EAAzB,qBAIF,yBACE,SAAC,KAAD,CAAMgB,GAAG,UAAUiB,QAASjC,EAA5B,8BAMN,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nconst KEY_API = `?api_key=85c51028d47d6f3b76fd606d9b7a0314&language=en-US`;\nconst baseUrl = 'https://api.themoviedb.org/3/movie/';\nconst urlImg = 'https://image.tmdb.org/t/p/original/';\n\nexport default function MovieDetails() {\n  const [moveInf, setMoveInf] = useState('');\n  const { movieId } = useParams();\n  const [status, setStatus] = useState('idle');\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  console.log('backLinkHref', backLinkHref);\n  const refLink = useRef(backLinkHref);\n  console.log('refLink', refLink);\n\n  useEffect(() => {\n    axios.get(`${baseUrl}${movieId}${KEY_API}`).then(res => {\n      setMoveInf(res);\n      setStatus('pending');\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={refLink.current}>\n        <button> {`<`} back</button>\n      </Link>\n\n      <div style={{ display: 'flex' }}>\n        {status === 'idle' ? null : (\n          <>\n            <img\n              width={220}\n              src={`${urlImg}${moveInf.data.poster_path}`}\n              alt=\"poster\"\n            />\n\n            <div>\n              <h2>{moveInf.data.title}</h2>\n              <p>User Score: {(moveInf.data.vote_average * 10).toFixed()}%</p>\n              <p>\n                <b>Overview</b>\n              </p>\n              <p>{moveInf.data.overview}</p>\n              <p>\n                <b>Genres</b>\n              </p>\n              <p>{moveInf.data.genres.map(gen => \"'\" + gen.name + \"' \")}</p>\n            </div>\n          </>\n        )}\n      </div>\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" movieid={movieId}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" movieid={movieId}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["MovieDetails","useState","moveInf","setMoveInf","movieId","useParams","status","setStatus","backLinkHref","useLocation","state","from","console","log","refLink","useRef","useEffect","axios","then","res","to","current","style","display","width","src","data","poster_path","alt","title","vote_average","toFixed","overview","genres","map","gen","name","movieid"],"sourceRoot":""}